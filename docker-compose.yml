version: '3'

networks:
  nginx_net:
    driver: bridge

services:
  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
    networks:
      - nginx_net
    depends_on:
      - app1
      - app2
      - frontend1
      - frontend2
  
  app1:
    image: node:alpine
    restart: always
    environment:
      PORT: 5000
      API_PATH: 'server'
    volumes:
      - ./backend:/app # Mapeia o diretório da a aplicação para /app no container
    working_dir: /app # Define o diretório de trabalho dentro do container
    command: npm start
    networks:
      - nginx_net
  
  app2:
    image: node:alpine
    restart: always
    environment:
      PORT: 5000
      API_PATH: 'server'
    volumes:
      - ./backend:/app # Mapeia o diretório da a aplicação para /app no container
    working_dir: /app # Define o diretório de trabalho dentro do container
    command: npm start
    networks:
      - nginx_net

  frontend1:
    image: nginx:1.24
    volumes:
      - ./frontend/html1:/usr/share/nginx/html
      - ./frontend/nginx/:/etc/nginx/
    networks:
      - nginx_net

  frontend2:
    image: nginx:1.24
    volumes:
      - ./frontend/html2:/usr/share/nginx/html
      - ./frontend/nginx/:/etc/nginx/
    networks:
      - nginx_net
